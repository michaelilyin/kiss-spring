apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: hrh-cloud
  name: hrh-cloud-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /api/$1
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  labels:
    app: hrh
spec:
  tls:
    - hosts:
        - api.hrh.michaelilyin.ru
      secretName: api-tls
  rules:
    - host: api.hrh.michaelilyin.ru
      http:
        paths:
          - path: /v1/items/(.*)
            backend:
              serviceName: items
              servicePort: 8080
          - path: /v1/houses/(.*)
            backend:
              serviceName: houses
              servicePort: 28081


---


#####
# Items Service
#####
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: hrh-cloud
  labels:
    app: items
  name: items
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: items
  strategy:
    type: RollingUpdate
  template:
    metadata:
      namespace: hrh-cloud
      labels:
        app: items
    spec:
      containers:
      - image: michaelilyin/hrh-items:latest
        imagePullPolicy: Always
        name: hrh-cloud-items
---
apiVersion: v1
kind: Service
metadata:
  namespace: hrh-cloud
  labels:
    app: items
  name: items
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: items
  type: ClusterIP


---


#####
# Houses Service
#####
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: hrh-cloud
  labels:
    app: houses
  name: houses
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: houses
  strategy:
    type: RollingUpdate
  template:
    metadata:
      namespace: hrh-cloud
      labels:
        app: houses
    spec:
      containers:
        - image: michaelilyin/hrh-houses:latest
          imagePullPolicy: Always
          name: hrh-cloud-houses
---
apiVersion: v1
kind: Service
metadata:
  namespace: hrh-cloud
  labels:
    app: houses
  name: houses
spec:
  ports:
    - name: 28081-28081
      port: 28081
      protocol: TCP
      targetPort: 28081
  selector:
    app: houses
  type: ClusterIP

